# Autogenerated by tools/build/setup_cmake.py
# from tools/build/cmake_templates/ModuleLib.cmake
# Do not edit - any changes will be lost!

FILE(GLOB gensources
     "${CMAKE_BINARY_DIR}/src/atom/*.cpp")

FILE(GLOB genheaders
     "${CMAKE_BINARY_DIR}/include/IMP/atom/*.h")

include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${HDF5_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH})
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${HDF5_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})
add_definitions("-DIMPATOM_EXPORTS")

include(Files.cmake)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} ${ATOM_CXX_FLAGS}")

set(headers ${CMAKE_SOURCE_DIR}/modules/atom/include/AngleSingletonScore.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Atom.h
${CMAKE_SOURCE_DIR}/modules/atom/include/BerendsenThermostatOptimizerState.h
${CMAKE_SOURCE_DIR}/modules/atom/include/BondEndpointsRefiner.h
${CMAKE_SOURCE_DIR}/modules/atom/include/BondPairContainer.h
${CMAKE_SOURCE_DIR}/modules/atom/include/BondSingletonScore.h
${CMAKE_SOURCE_DIR}/modules/atom/include/BondedPairFilter.h
${CMAKE_SOURCE_DIR}/modules/atom/include/BrownianDynamics.h
${CMAKE_SOURCE_DIR}/modules/atom/include/BrownianDynamicsTAMD.h
${CMAKE_SOURCE_DIR}/modules/atom/include/CAAngleRestraint.h
${CMAKE_SOURCE_DIR}/modules/atom/include/CADihedralRestraint.h
${CMAKE_SOURCE_DIR}/modules/atom/include/CHARMMAtom.h
${CMAKE_SOURCE_DIR}/modules/atom/include/CHARMMParameters.h
${CMAKE_SOURCE_DIR}/modules/atom/include/CHARMMStereochemistryRestraint.h
${CMAKE_SOURCE_DIR}/modules/atom/include/CenterOfMass.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Chain.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Charged.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Copy.h
${CMAKE_SOURCE_DIR}/modules/atom/include/CoulombPairScore.h
${CMAKE_SOURCE_DIR}/modules/atom/include/CoverBond.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Diffusion.h
${CMAKE_SOURCE_DIR}/modules/atom/include/DihedralSingletonScore.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Domain.h
${CMAKE_SOURCE_DIR}/modules/atom/include/DopePairScore.h
${CMAKE_SOURCE_DIR}/modules/atom/include/EzRestraint.h
${CMAKE_SOURCE_DIR}/modules/atom/include/ForceFieldParameters.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Fragment.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Hierarchy.h
${CMAKE_SOURCE_DIR}/modules/atom/include/ImproperSingletonScore.h
${CMAKE_SOURCE_DIR}/modules/atom/include/LangevinThermostatOptimizerState.h
${CMAKE_SOURCE_DIR}/modules/atom/include/LennardJones.h
${CMAKE_SOURCE_DIR}/modules/atom/include/LennardJonesPairScore.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Mass.h
${CMAKE_SOURCE_DIR}/modules/atom/include/MolecularDynamics.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Molecule.h
${CMAKE_SOURCE_DIR}/modules/atom/include/OrientedSoapPairScore.h
${CMAKE_SOURCE_DIR}/modules/atom/include/RemoveRigidMotionOptimizerState.h
${CMAKE_SOURCE_DIR}/modules/atom/include/RemoveTranslationOptimizerState.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Representation.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Residue.h
${CMAKE_SOURCE_DIR}/modules/atom/include/SameResiduePairFilter.h
${CMAKE_SOURCE_DIR}/modules/atom/include/SecondaryStructureResidue.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Selection.h
${CMAKE_SOURCE_DIR}/modules/atom/include/Simulator.h
${CMAKE_SOURCE_DIR}/modules/atom/include/SoapPairFilter.h
${CMAKE_SOURCE_DIR}/modules/atom/include/State.h
${CMAKE_SOURCE_DIR}/modules/atom/include/StereochemistryPairFilter.h
${CMAKE_SOURCE_DIR}/modules/atom/include/StructureSource.h
${CMAKE_SOURCE_DIR}/modules/atom/include/TAMDCentroid.h
${CMAKE_SOURCE_DIR}/modules/atom/include/TAMDParticle.h
${CMAKE_SOURCE_DIR}/modules/atom/include/VelocityScalingOptimizerState.h
${CMAKE_SOURCE_DIR}/modules/atom/include/angle_decorators.h
${CMAKE_SOURCE_DIR}/modules/atom/include/atom_macros.h
${CMAKE_SOURCE_DIR}/modules/atom/include/bond_decorators.h
${CMAKE_SOURCE_DIR}/modules/atom/include/bond_graph.h
${CMAKE_SOURCE_DIR}/modules/atom/include/charmm_segment_topology.h
${CMAKE_SOURCE_DIR}/modules/atom/include/charmm_topology.h
${CMAKE_SOURCE_DIR}/modules/atom/include/constants.h
${CMAKE_SOURCE_DIR}/modules/atom/include/dihedrals.h
${CMAKE_SOURCE_DIR}/modules/atom/include/distance.h
${CMAKE_SOURCE_DIR}/modules/atom/include/element.h
${CMAKE_SOURCE_DIR}/modules/atom/include/estimates.h
${CMAKE_SOURCE_DIR}/modules/atom/include/force_fields.h
${CMAKE_SOURCE_DIR}/modules/atom/include/hierarchy_tools.h
${CMAKE_SOURCE_DIR}/modules/atom/include/mol2.h
${CMAKE_SOURCE_DIR}/modules/atom/include/pdb.h
${CMAKE_SOURCE_DIR}/modules/atom/include/pdb_SAXSDom.h
${CMAKE_SOURCE_DIR}/modules/atom/include/protein_ligand_score.h
${CMAKE_SOURCE_DIR}/modules/atom/include/python_only.h
${CMAKE_SOURCE_DIR}/modules/atom/include/secondary_structure_reader.h
${CMAKE_SOURCE_DIR}/modules/atom/include/smoothing_functions.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/ExcludedPair.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/Gaussian.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/SelectionPredicate.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/Sigmoid.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/bond_graph_boost_functions.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/bond_graph_functors.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/bond_helpers.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/charmm_helpers.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/mol2.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/pdb.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/soap_bond_separation.h
${CMAKE_SOURCE_DIR}/modules/atom/include/internal/soap_chain_separation.h)

if(DEFINED IMP_atom_LIBRARY_EXTRA_SOURCES)
  set_source_files_properties(${IMP_atom_LIBRARY_EXTRA_SOURCES}
                              PROPERTIES GENERATED 1)
endif()
set_source_files_properties(${CMAKE_BINARY_DIR}/src/atom_config.cpp
  PROPERTIES GENERATED 1)

if(DEFINED IMP_atom_IS_CUDA)
  #  FILE(GLOB IMP_atom_CUDA_SOURCES "${CMAKE_SOURCE_DIR}/modules/atom/src/*.cu")
  message(STATUS "Setting up cuda: " "${cudafiles}")
  FIND_PACKAGE(CUDA REQUIRED)
  INCLUDE(FindCUDA)
  LIST(APPEND CUDA_NVCC_FLAGS --compiler-options -fno-strict-aliasing -lineinfo -use_fast_math -Xptxas -dlcm=cg)
  LIST(APPEND CUDA_NVCC_FLAGS -gencode arch=compute_20,code=sm_20)
  LIST(APPEND CUDA_NVCC_FLAGS -gencode arch=compute_30,code=sm_30)
  LIST(APPEND CUDA_NVCC_FLAGS -gencode arch=compute_35,code=sm_35)
  set(sources ${cppfiles} ${cudafiles} )
  CUDA_ADD_LIBRARY(IMP.atom-lib ${gensources} ${genheaders}
    ${headers} ${sources} ${cudasources}
    ${CMAKE_BINARY_DIR}/src/atom_config.cpp
    ${IMP_atom_LIBRARY_EXTRA_SOURCES}
    ${IMP_LIB_TYPE}
    )
  target_link_libraries(IMP.atom-lib ${CUDA_LIBRARIES} ${CUDA_curand_LIBRARY})
  message(STATUS "CUDA libraries: " "${CUDA_LIBRARIES}")
  message(STATUS "CUDA curand library: " "${CUDA_curand_LIBRARY}")
elseif(DEFINED IMP_atom_IS_PER_CPP)
  set(sources ${cppfiles})
  add_library(IMP.atom-lib  ${IMP_LIB_TYPE} ${gensources} ${genheaders}
              ${headers} ${sources}
              ${CMAKE_BINARY_DIR}/src/atom_config.cpp
              ${IMP_atom_LIBRARY_EXTRA_SOURCES}
              )
else()
  add_library(IMP.atom-lib  ${IMP_LIB_TYPE} ${gensources} ${genheaders}
              ${headers} ${CMAKE_BINARY_DIR}/src/atom_all.cpp
              ${CMAKE_BINARY_DIR}/src/atom_config.cpp
              ${IMP_atom_LIBRARY_EXTRA_SOURCES}
              )
endif()
set_target_properties(IMP.atom-lib PROPERTIES
                      OUTPUT_NAME imp_atom)

# Note that soversion is only set if a version is set in the *source* directory.
# This is because we have to set soversion at cmake, not build, time. All stable
# releases have a VERSION file in the source directory, so this should be OK.
IF (EXISTS ${CMAKE_SOURCE_DIR}/modules/atom/VERSION)
  file(STRINGS ${CMAKE_SOURCE_DIR}/modules/atom/VERSION sover
       REGEX "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$")
ELSEIF(EXISTS ${CMAKE_SOURCE_DIR}/VERSION)
  file(STRINGS ${CMAKE_SOURCE_DIR}/VERSION sover
       REGEX "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$")
ENDIF()
IF (NOT "${sover}" STREQUAL "")
  set_target_properties(IMP.atom-lib PROPERTIES
                        VERSION ${sover} SOVERSION ${sover})
ELSE()
  set_target_properties(IMP.atom-lib PROPERTIES
                        VERSION 0 SOVERSION 0)
ENDIF()

set_property(TARGET "IMP.atom-lib" PROPERTY FOLDER "IMP.atom")

INSTALL(TARGETS IMP.atom-lib DESTINATION ${CMAKE_INSTALL_LIBDIR})

add_dependencies(IMP.atom-lib IMP.atom-version)

if(DEFINED IMP_atom_LIBRARY_EXTRA_DEPENDENCIES)
  add_dependencies(IMP.atom-lib ${IMP_atom_LIBRARY_EXTRA_DEPENDENCIES})
endif()

target_link_libraries(IMP.atom-lib ${imp_atom_libs})



set(IMP_atom_LIBRARY IMP.atom-lib CACHE INTERNAL "" FORCE)
